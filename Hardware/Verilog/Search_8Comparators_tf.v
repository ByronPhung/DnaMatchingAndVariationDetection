`timescale 1ns / 1ps

////////////////////////////////////////////////////////////////////////////////
// Company: 	  Cal Poly Pomona
// Engineer:	  Byron Phung
//
// Create Date:   23:27:29 04/27/2016
// Design Name:   Search_8Comparators
// Module Name:   D:/Documents/College/CalPolyPomona/SeniorProject/hardware-accelerated-dna-matching-and-variation-detection/Hardware/Verilog/Search_8Comparators_tf.v
// Project Name:  Verilog
// Target Device:  
// Tool versions:  
// Description: 
//
// Verilog Test Fixture created by ISE for module: Search_8Comparators
//
// Dependencies:
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
////////////////////////////////////////////////////////////////////////////////

module Search_8Comparators_tf;

	// Inputs
	reg clock;
	reg reset;
	reg [1023:0] data;
	reg [63:0] key;

	// Outputs
	wire match;

	// Instantiate the Unit Under Test (UUT)
	Search_8Comparators uut (
		.clock(clock), 
		.reset(reset), 
		.data(data), 
		.key(key), 
		.match(match)
	);

	// Alternate the clock every unit of time.
	initial begin
		clock = 0;
		repeat (1_000_000)
			#1 clock =~ clock;
	end

	initial begin
		// Initialization
		reset = 1;
		data = 1024'b
		key  = 64'b0100111010111010001100110010000010010111001110111010001010111000;
		@(negedge clock);
		
		// Turn off the reset and let the module be tested as is.
		reset = 0;
	end
      
endmodule

